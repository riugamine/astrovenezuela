# =================================================================
# DEVELOPMENT ENVIRONMENT (.env.local)
# Copy this file to .env.local and update the Supabase credentials
# =================================================================

# Environment
NODE_ENV=development

# Site Configuration
NEXT_PUBLIC_SITE_URL=http://localhost:3000

# Supabase Configuration (UPDATE THESE WITH YOUR ACTUAL VALUES)
# Go to https://app.supabase.com → Your Project → Settings → API
NEXT_PUBLIC_SUPABASE_URL=https://your-project-id.supabase.co
NEXT_PUBLIC_SUPABASE_ANON_KEY=your_supabase_anon_key_here
SUPABASE_SERVICE_ROLE_KEY=your_supabase_service_role_key_here

# OAuth Security (PROVIDED SECRET)
OAUTH_STATE_SECRET=df6370b219883146205d4032207a4b16544d002ec569dcb841dcb8888c06ad0f

# Additional Security Secrets (GENERATE THESE - see instructions below)
SESSION_SECRET=generate_64_byte_hex_secret_here
ENCRYPTION_KEY=generate_32_byte_hex_secret_here

# Google Services (OPTIONAL - for Google Maps)
NEXT_PUBLIC_GOOGLE_MAPS_API_KEY=your_google_maps_api_key_here

# Development Debug Settings
DEBUG_MODE=true
LOGGING_LEVEL=debug

# Feature Flags for Development
FEATURE_ADMIN_PANEL=true
FEATURE_ANALYTICS=false
FEATURE_BETA_FEATURES=true

# Optional: Payment Processing (Use Stripe test keys for development)
# STRIPE_PUBLIC_KEY=pk_test_your_stripe_test_public_key
# STRIPE_SECRET_KEY=sk_test_your_stripe_test_secret_key

# Optional: Analytics for Development
# GOOGLE_ANALYTICS_ID=G-XXXXXXXXXX

# =================================================================
# INSTRUCTIONS TO COMPLETE SETUP:
# =================================================================
# 
# 1. COPY THIS FILE:
#    Copy this file to .env.local in your project root
#
# 2. GENERATE REMAINING SECRETS:
#    Run these commands to generate the missing secrets:
#    
#    For SESSION_SECRET (64 bytes):
#    node -e "console.log('SESSION_SECRET=' + require('crypto').randomBytes(64).toString('hex'))"
#    
#    For ENCRYPTION_KEY (32 bytes):
#    node -e "console.log('ENCRYPTION_KEY=' + require('crypto').randomBytes(32).toString('hex'))"
#
# 3. UPDATE SUPABASE CREDENTIALS:
#    - Go to https://app.supabase.com
#    - Select your project
#    - Go to Settings → API
#    - Copy the Project URL, anon key, and service_role key
#    - Replace the placeholder values above
#
# 4. CONFIGURE OAUTH IN SUPABASE:
#    - Go to Authentication → Providers in Supabase
#    - Enable Google provider
#    - Set Site URL: http://localhost:3000
#    - Set Redirect URL: http://localhost:3000/auth/callback
#
# 5. SETUP GOOGLE OAUTH:
#    - Go to Google Cloud Console
#    - Create OAuth 2.0 credentials
#    - Set authorized redirect URI: http://localhost:3000/auth/callback
#    - Copy Client ID and Secret to Supabase Google provider settings
#
# 6. TEST THE SETUP:
#    npm run dev
#    Visit: http://localhost:3000/auth
#    Try Google OAuth login
#
# ================================================================= 